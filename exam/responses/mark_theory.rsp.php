<?php    //initializations	spl_autoload_register(		function($class){			require_once'../../classes/'.$class.'.php';		}	);	session_start(Config::get('session/options'));	//end of initializatons    require_once '../../libraries/vendor/autoload.php';    use PhpOffice\PhpSpreadsheet\IOFactory as IOObj;    $mgt = new Management();    $staff = new Staff();    $std = new Student();    $user = null;    $message='';    if($mgt->isRemembered()){        $user = $mgt;    }    if($staff->isRemembered()){        $user = $staff;    }    	if(empty($user)){ //ensure user is legally logged in            Redirect::to('index.php'); //redirect to exam home page	}            header("Content-Type: application/json; charset=UTF-8");    if(Input::submitted()&& Token::check(Input::get('token'))){        $examId = Utility::escape(Input::get('examid'));        //validate file        $msg='';        $val = new Validation();        $fileUploaded = false;        if(!$val->checkFile([            'uploadedFile'=>[                'name'=>'Uploaded File',                'required'=>true,                'maxSize'=>5000,                'extension'=>['xlsx','xls']            ]        ])){             foreach($val->errors() as $error){                 $msg.=$error.'<br/>';             }        }else{                       $fileHandler = new File('uploadedFile');            $uploadPath = '../uploads/exam/';            $destination = $uploadPath.$examId.'.'.$fileHandler->extension();            $fileHandler->move($destination);            $fileUploaded = true;                        $ext = IOObj::identify($destination); //identify the extension of the file            $reader = IOObj::createReader($ext); //creates a reader for the identified extension            $reader->getReadDataOnly(); //set the reader to read data only ignoring the data formatting            $spreadsheet = $reader->load($destination); //loads a spreadsheet            $exam = new Exam();            $firstReadRow = 5; //this is the first row where usable data is read from            $lastRow = $spreadsheet->getActiveSheet()->getCell('E1');            $valArray = $spreadsheet->getActiveSheet()->rangeToArray('A'.$firstReadRow.':G'.$lastRow,null,false,false,true); //returns the activesheet of the spreadsheet            //validate the values gotten from the cell            $msg = '';            //validation is relaxed here for ease of use and also because some of the validation are embedded in the excel file, the examineeIds and  qtns are not  validated            //only the examinee comment is validated here            $firstTime = true;            $db = DB::get_instance();            foreach ($valArray as $row=>$val){                if($val['E'] == 'readable'){ //this will only be true if the present row is among the examinee row                    $rowToReadCount = $val['F']; //get the amount of row to read, this is the no of qtns for that distinct question                    $qId = $val['G']; //the distinct question id                    $readFrom = $row + 1; //                    $readTo = $row + $rowToReadCount;                                        if($firstTime){                        $db->query('select mark from ex_question where id=? limit 1',[$val['G']]);                        $firstTime = false;                    }else{                        $db->requery([$val['G']]);                    }                    $mark = $db->one_result()->mark;                                        for($i=$readFrom;$i<=$readTo;$i++){                        $currRow = $valArray[$i]; //store the current row in a variable  for easy access                        $examineeId = $currRow['A']; //examinee identity                        if(!Utility::noScript($currRow['C'])){                            $msg = 'Illegal character in C'.$i;                        }                                                  if($currRow['D'] > $mark){                            $msg = 'Invalid mark in D'.$row;                        }                    }                }                                           }                        }                                        if(!empty($msg)){                echo json_encode(['success'=>false,'message'=>$msg,'token'=>Token::generate()]); //send back some error messages to user            }else{                 $passMark = Utility::escape(Input::get('passmark'));                 $totalRowCount = count($valArray);                                                    $url = new Url();                  $examPortal = $url->to('index.php',4);                 foreach ($valArray as $row=>$val){                     if($val['E'] == 'readable'){ //this will only be true if the present row is among the examinee row                         $rowToReadCount = $val['F']; //get the amount of row to read, this is the no of qtns for that distinct question                         $qId = $val['G']; //the distinct question id                         $readFrom = $row + 1; //                         $readTo = $row + $rowToReadCount;                         for($i=$readFrom;$i<=$readTo;$i++){                             $currRow = $valArray[$i]; //store the current row in a variable  for easy access                             $examineeId = $currRow['A']; //examinee identity                             //update the theory qtn with the comment and mark                             $exam->updateTheoryQtn($examId,$examineeId,$qId,$currRow['D'],$currRow['C'],true);                             if($exam->noMoreTheoryQtns($examId,$examineeId)){  //check to see if this is the last theory qtn of the distinct question                                //update the answer in the ex_completed table                                $exam->updateCompletedExam($examId,$examineeId,$passMark);                                //update the answer in the ex_completed table                                $exam->updateCompletedExam($examId,$examineeId,$passMark);                                $alert->send($examineeId, $examId.' Result', '<p style="font-size:14px">Hi, your result for '.$examId.' is ready</p><p>You can view it <a href="result.php?examid='.$examId.'&examineeid='.$examineeId.'">here</a></p>');                                //notifies the examinee that his result is ready                                //email the examinee that his result is ready                                $emailMessage = '<p style="font-size:14px">Hi, your result for '.$examId.' is ready</p><p>Login <a href="'.$examPortal.'">here</a> to the school portal, then navigate to view result</p>';                             }                          }                     }                 }                 echo json_encode(['success'=>true,'token'=>Token::generate()]); //message indicating that it was  successful                               }                //delete the excel file         if($fileUploaded){             unlink($destination);        }           }    