<?php    //initializations	spl_autoload_register(		function($class){			require_once'../classes/'.$class.'.php';		}	);	session_start(Config::get('session/options'));	//end of initializatons        $url = new Url();    $mgt = new Management();    $staff = new Staff();    $std = new Student();    $adm = new Admission();    $user = null;    if($mgt->isRemembered()){        $user = $mgt;    }    if($staff->isRemembered()){        $user = $staff;    }    if($std->isRemembered()){        $user = $std;    }    if($adm->isRemembered()){        $user = $adm;    }    if(!isset($user)){ //ensure user is legally logged in            Redirect::to('index.php'); //redirect to exam index    }      $msg='';    $user_col = $user->getUsernameColumn();    $username = strtoupper($user->data()->$user_col);    $exam = new Exam();    $qtn = new Question();    if(Input::submitted('get') && !empty(Input::get('examid'))){        $examId = Utility::escape(Input::get('examid'));        //check if user have completed the exam        $availableExams = $exam->getAvailableExams($username);        if(empty($availableExams)){            Redirect::to('take_exams.php');        }        $exist = false; //initialize to force so that the code will proceed only when it is true        foreach($availableExams as $exm){            //confirm that this particular exam is available            if(Utility::equals($examId,$exm->exam_id)){                $exist = true;                break;            }        }        if($exist){                        $expired = false; //initialized to false, to be change to true when exam has expired            if(!$exam->isExpired($examId)){ //ensure that the exam to be published have not expired                $qtns = $qtn->getOngoingExamQtns($examId);                $examDetails = $exam->getDetails($examId);                $instruction = $examDetails->instruction;                $count = $exam->handleCount($examId, $username,$examDetails->count);                $indexes = Utility::randNums(0,($examDetails->no_qtn_added)-1,$examDetails->no_qtn_added);                //record 0 score for the examinee if maxcount have been reached                if($count >= $examDetails->count){                    $exam->insertCompleted($examId,$examDetails->examiner_id,$username,0,0,0,0,null,false);                     if(!empty($examDetails->transfer)){ //this should only be true if it is an external exam (exam from the main portal)                          $db = DB::get_instance();                           $transferDetails = json_decode($examDetails->transfer);                          $db->query('update '.$transferDetails->tableName.' set '.$transferDetails->tableColumn.' = ? where '.$transferDetails->idColumn.'=? and subject_id=?',[0,$examineeId,$transferDetails->subid]);                       }                }                $remTrials = $examDetails->count - $count;                $remTrials++; //increased for friendly message, $remTrialsMsg                switch($remTrials){                    case 1:                        $remTrialsMsg = 'Last Trial';                    break;                    case 2:                        $remTrialsMsg = '2 trials remaining';                    break;                    default:                        $remTrialsMsg = $remTrials.' trials remaining';                }                $details = ['examData'=>$examDetails,'qtns'=>$qtns,'username'=>$username,'indexes'=>$indexes,'count'=>$count];            }else{                 $msg .= '<div class="message">'.strtoupper($examId).' exam has expired</div>';                 $expired = true;                            }                    }else{            Redirect::to(404);        }    }else{        Redirect::to(404);    }    ?><!DOCTYPE html><html lang="en">    <head>        <meta name="HandheldFriendly" content="True">        <meta name="viewport" content="width=device-width, initial-scale=1.0">        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">        <meta http-equiv="X-UA-Compatible" content="IE=edge">        <title>Exam Page</title>        <link rel="stylesheet" type="text/css" href="ld_loader/ld_loader.css" />        <link rel="stylesheet" type="text/css" href="styles/style.css" />        <link rel="stylesheet" type="text/css" href="styles/ongoing_exam.css" />    </head>    <body>        <?php require_once 'nav.inc.php'?>        <main>            <?php require_once 'header.inc.php'?>            <?php if($expired){                echo $msg;                exit();  //stop script if exam has expired            } ?>        <div id="data"><?php echo json_encode($details); ?></div>        <div class="sectionheader"><?php echo 'Do not refresh page<br>'.strtoupper($examId).' ('. $remTrialsMsg.')';?></div>        <div id="qtnContainer">            <div id="qtnAndTimer">                <div id="qtnIndicator"></div>                <div id="timer"></div>            </div>            <div id="passageDiv" class="noPassage"></div>            <div id="questionDiv"></div>            <div id="optionDiv"></div>            <input type = "hidden" value = "<?php echo Token::generate(); ?>" name = "token" id="token"/> <!--hidden token -->            <div id="navDiv">                <button id="prevBtn">&#60;Prev</button>                <button id="subBtn">Submit</button><span id="ld_loader"></span>                <button id="nextBtn">Next&#62;</button>            </div>            <div id="msgDiv"><?php echo $msg ?></div>            <div id="linkDiv"></div>        </div>        <div id="startContainer">            <div id="instruction"><?php echo $examDetails->instruction; ?></div>            <div><button id="startBtn">Start</button></div>        </div>        </main>        <script>            window.onload = function(){                appendScript("ld_loader/ld_loader.js");                appendScript("scripts/script.js");                appendScript("scripts/ajaxrequest.js");                appendScript("scripts/ongoing_exam.js");            }            function appendScript(source){                let script = document.createElement("script");                script.src=source;                document.body.appendChild(script);            }        </script>    </body></html>